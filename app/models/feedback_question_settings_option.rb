##
# Created by Thomas Li
# Originally generated 25 November 2022
# Last modified 25 November 2022
#
# This model represents configuration options that can be applied to
# certain question types.
#
# The effects of these options is to be handled by the controller, with
# the model simply tracking them.
#
# Aside of the autogenerated ID and timestamps, the following fields are
# present:
#
#   question_type_id : integer
#     Foreign key into the FeedbackQuestionType model, to indicate which
#     types of questions the option can be applied to. Set to nil to make
#     it applicable to all
#
#   internal_name : string (required)
#     A verbal identifier for internal use, all-uppercase by convention
#
#     The question type ID and internal name together form a unique index,
#     with the type ID on its own being a non-unique index.
#
#   descriptor : string (required)
#     A reader-friendly name for external use
#
#   quantitative : boolean (supposed to be required, but false gets
#   interpreted as nil and vise versa)
#     Set to true to allow the option to be configured to arbitrary
#     integer values, false to limit the values to matching entries from
#     the FeedbackQuestionSettingsValue model
#
#   default : integer
#     The value that this option will take on if none is set - can leave
#     as nil
#
# This is intended to be a reference table, containing a limited set of
# of pre-seeded values that the FeedbackQuestionSettings table draws from,
# as opposed to be being populated by user actions. The following values
# are initialized in the seed script:
#
#   Options available for all question types (question_type_id = nil)
#
#     internal_name: "REQUIRED"
#     descriptor: "Make this question required?"
#     quantitative: false (values: TRUE, FALSE)
#     default: (ID corresponding to FALSE)
#
#     internal_name: "RELEASE_TO"
#     descriptor: "Who should be able to see the responses to this question
#     once the results are released?"
#     quantitative: false (values: PRESENTERS_ONLY, INSTRUCTORS_ONLY,
#     PRESENTERS_AND_INSTRUCTORS, EVERYBODY)
#     default (ID corresponding to PRESENTERS_AND_INSTRUCTORS)
#
#     internal_name: "DEANONYMIZATION"
#     descriptor: "Among those who can see the results, who should be able
#     to see which users submitted which responses?"
#     quantitative: false (values: NOBODY, PRESENTERS_ONLY, INSTRUCTORS_ONLY,
#     PRESENTERS_AND_INSTRUCTORS, EVERYBODY)
#     default: (ID corresponding to INSTRUCTORS_ONLY)
#
#   Options available for SCALE type
#
#     internal_name: "MIN_VALUE"
#     descriptor: "Set the minimum allowable value:"
#     quantitative: true
#     default: 0
#
#     internal_name: "MAX_VALUE"
#     descriptor: "Set the maximum allowable value:"
#     quantitative: true
#     default: 5
#
#   Options available for TEXT type
#
#     internal_name: "MIN_LENGTH"
#     descriptor: "Set the minimum allowable response length in characters:"
#     quantitative: true
#     default: 0
#
#     internal_name: "MAX_LENGTH"
#     descriptor: "Set the maximum allowable response length in characters
#     (leave blank to allow unlimited length):"
#     quantitative: true
#     default: nil
#
class FeedbackQuestionSettingsOption < ApplicationRecord
  # Set associations for foreign keys
  belongs_to :question_type, class_name: 'FeedbackQuestionType', optional: true

  # Create accessors associated entities
  has_many :values, class_name: 'FeedbackQuestionSettingsValue', foreign_key: 'option_id'

  # Validate presence of required fields
  validates :internal_name, presence: true
  validates :descriptor, presence: true

  # Normalize internal name
  before_save { internal_name.upcase! }
end
