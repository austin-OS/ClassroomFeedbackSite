#
# Adapted by Canaan Porter from the Ruby on Rails Tutorial
# https://www.railstutorial.org/book
#
# This model defines a user of the site FeedBackEr
#
# Aside of the autogenerated ID and timestamps, the following fields
# are present:
#
#   name : String (required)
#     The name of the user.
#
#   email : String (required)
#     The email of the user. This must be unique, is automatically set
#     to all lowercase, and is used as the user's login.
#
#   role : String
#     The course role of the user. The two options for role are
#     "instructor" or "student". This determines which parts of
#     the site the user has permissions to view and edit.
#
#   password_digest : String (required)
#     The password digest associated with the user's password
#     used to log in. Created by BCrypt's has_secure_password.
#
#   presentations : has and belongs to many
#     The presentations given by the students
#

class User < ApplicationRecord
  before_save { email.downcase! }
  validates :name, presence: true, length: { maximum: 100 }
  VALID_EMAIL_REGEX = /\A[\w+\-.]+@[a-z\d\-.]+\.[a-z]+\z/i
  validates :email, presence: true, length: { maximum: 255 },
                    format: { with: VALID_EMAIL_REGEX },
                    uniqueness: { case_sensitive: false }
  has_secure_password
  validates :password, length: { minimum: 6 }, presence: true

  # A user can have many presentation groups that they are apart of
  has_and_belongs_to_many :presentations, optional: true

  # A user will have copies of feedback forms assigned to them
  has_many :assigned_feedbacks, class_name: 'FeedbackAssignment', foreign_key: 'evaluator_id'

  # Returns the hash digest of the given string.
  def self.digest(string)
    cost = if ActiveModel::SecurePassword.min_cost
             BCrypt::Engine::MIN_COST
           else
             BCrypt::Engine.cost
           end
    BCrypt::Password.create(string, cost:)
  end
end
